from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext

import asyncio
import os

import db
import keyboards as kb
from init import dp
from config import Config
from utils.video_utils import download_audio
from enums import BaseCB


# –ø–µ—Ä–≤—ã–π —ç–∫—Ä–∞–Ω
@dp.message(CommandStart())
async def command_start_handler(msg: Message, state: FSMContext) -> None:
    await state.clear()
    await db.create_or_update_user(
        user_id=msg.from_user.id,
        full_name=msg.from_user.full_name,
        username=msg.from_user.username,
    )
    text = ('–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!–≠—Ç–æ –±–æ—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å –Æ—Ç—É–±–∞ —Ç–≤–æ–µ–π –ª—é–±–∏–º–æ–π –º—É–∑—ã–∫–∏,–ø–æ–¥–∫–∞—Å—Ç–æ–≤ –∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥\n\n'
            '–°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –ø–æ–ª–µ–∑–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –Ω–æ –ø–æ–∫–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–∞–º –±–æ—Ç)')

    await msg.answer(text=text, reply_markup=kb.get_main_user_kb())


# –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞—Ä—Ç—É
@dp.callback_query(lambda cb: cb.data.startswith(BaseCB.BACK_START.value))
async def my_music_performer(cb: CallbackQuery):
    text = ('–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!–≠—Ç–æ –±–æ—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å –Æ—Ç—É–±–∞ —Ç–≤–æ–µ–π –ª—é–±–∏–º–æ–π –º—É–∑—ã–∫–∏,–ø–æ–¥–∫–∞—Å—Ç–æ–≤ –∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥\n\n'
            '–°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –ø–æ–ª–µ–∑–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –Ω–æ –ø–æ–∫–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–∞–º –±–æ—Ç)')

    await cb.message.edit_text (text=text, reply_markup=kb.get_main_user_kb ())


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ç
@dp.message(Command('10_my_track'))
@dp.message(Command('10_random_track'))
async def get_random_set(msg: Message, state: FSMContext) -> None:
    await state.clear()

    if msg.text == '/10_my_track':
        tracks = await db.get_tracks(limit=10, user_id=msg.from_user.id)
    else:
        tracks = await db.get_tracks(limit=10)

    for track in tracks:
        await msg.answer_audio (audio=track.file_id, performer=track.performer, title=track.title)


# –≤ —Ä–∞–±–æ—Ç–µ
@dp.callback_query(lambda cb: cb.data.startswith('in_dev'))
async def my_music_performer(cb: CallbackQuery):
    text = 'üõ† –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'

    await cb.answer (text=text, show_alert=True)
